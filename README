================================================================
nessDB v1.8 with LSM-Tree
Copyright (C) 2011 BohuTANG________________ 
_____________________________  __ \__  __ )
__  __ \  _ \_  ___/_  ___/_  / / /_  __  |
_  / / /  __/(__  )_(__  )_  /_/ /_  /_/ / 
/_/ /_/\___//____/ /____/ /_____/ /_____/  
================================================================

  nessDB is a fast Key-Value database, supports Redis-Protocol(PING,SET,MSET,GET,MGET,DEL,EXISTS,INFO).
  Which is written in ANSI C with BSD LICENSE and works in most POSIX systems without external dependencies.
  The 1.8 version is still under construction.

  LAYOUT
  ======
  (1) mtable : which is a key sorted 'LSM-Tree' in memory and active for ADD/UPDATE/DELETE operations.
  	+skiplist.c

  (2) log : mtable's snapshot on-disk for data-recovery.
  	+log.c

  (3) sst : on-disk index file, key sorted too.
  	+sst.c

  (4) bg-merge : a background merge thread. It will start when one mtable is FULL.
  	+index.c

  (5) level-LRU : a level LRU cache on memory, it includes Old_Level_LRU and New_Level_LRU two levels.
  	+level.c
	+llru.c

  V1.8 FEATURES
  =============
  a. Better performances on Random-Read/Random-Write
  b. Log recovery
  c. Using LSM-Tree as storage engine
  d. Level LRU

  HOW TODO
  ========
  $make db-bench
  $./db-bench <write | read > <count> or $./db-bench readone <key>

  Thanks for your attention!
