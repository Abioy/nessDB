   nessDB using Compact-Hash-Tree for Index structure in memorystream. Its features are less-memory and high-performance.
  
  
   Features
   ========
   a,Keys&values are arbitrary byte arrays.
   b,Basic operations are Put(key,value),Get(key),Remove(key).
   c,Keys are compacted to integer   in memory.

   Benchmark
   =========
   nessDB:    version 1.3
   Date:      2011/07/03
   CPU:       Intel(R) Pentium(R) Dual CPU   T3200  @ 2.0GHz
	    
   Keys:       ~17 bytes each
   Values:     ~74 bytes each
   Entries:    10000000
   DB File Size:		723.7MB
   INDEX File Size:		237.4MB
   Memory used:			324MB
		        
   write sync: 			~590000  writes/sec,cost 16960000 cpu's clock
   read random sync:		~190000  reads/sec,cost 51680000 cpu's clock
   data load(seq read):		~1400000  reads/sec,cost 7160000 cpu's clock
