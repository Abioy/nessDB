================================================================
nessDB with LSM-Tree
Copyright (C) 2011 BohuTANG________________ 
_____________________________  __ \__  __ )
__  __ \  _ \_  ___/_  ___/_  / / /_  __  |
_  / / /  __/(__  )_(__  )_  /_/ /_  /_/ / 
/_/ /_/\___//____/ /____/ /_____/ /_____/  
================================================================
nessDB is a fast Key-Value database, supports Redis-Protocol(PING,SET,MSET,GET,MGET,DEL,EXISTS,INFO).
Which is written in ANSI C with BSD LICENSE and works in most POSIX systems without external dependencies.


OVERALL LAYOUT
==============
			       +------------------------------------+
			       |      nessDB  architecture          |
			       +------------------------------------+

	+--------------------------------+       +---------------------------------+ 
	|          memtable              |       |         background-merge        |
	|--------------------------------|------>|---------------------------------|
	|  key-stored memory table       |       |background merge detached thread |
	+--------------+-----------------+       +---------------------------------+
		       |
		       |
	+--------------+-----------------+
	|         on-disk sst            |
	|--------------------------------|
	|  key-stored disk index files   |
	+--------------+-----------------+
		       |
		       |
	+--------------+------------------+
	|         on-desk db              |
	|---------------------------------|
	|      disk database file         |
	+---------------------------------+

	+--------------+------------------+
	|         on-disk log             |
	|---------------------------------|
	|         disk log file           |
	+---------------------------------+

memtable
=========
 It is a key sorted 'LSM-Tree' in memory and active for ADD/UPDATE/DELETE operations
 (skiplist.c)

 'memtable' structured:
 +--------+--------------+-------------+
 |   key  | value-offset |  operation |
 +--------+--------------+-------------+
 'key' is entry key(is distint,or will be covered)
 'value-offset' is the offset of data storage in 'db' file
 'operation' is 'ADD' or 'DEL' action.


on-disk sst
===========
  'sst' is on-disk index file(key is stored), each '.sst' file's max count is limited by 'SST_MAX' macro,which is defined in 'sst.c', default count is 25000.
 
 a 'sst' index file layout:
 +------------------------------------------+
 |          sst block 1                     |
 +------------------------------------------+
 |          sst block 2                     |
 +------------------------------------------+
 |     ... more sst blocks ...              |
 +------------------------------------------+
 |          sst block N                     |
 +------------------------------------------+
 |             FOOTER                       |
 +------------------------------------------+

 'sst block' structured:
 +--------+-------------------------+
 |   key  | value-offset(big-endian | 
 +--------+-------------------------+
 'key' is entry key(is distint,or will be covered)
 'value-offset' is the offset of data storage in 'db' file
 NOTICE: all 'sst block' operations are 'ADD'('DEL' operation entries are filtered when written to index file)


 'FOOTER' structured:
 +-------------+-------+------+
 |   last-key  | count |  crc |
 +-------------+-------+------+
 'last-key' is the last one key of current sorted index file
 'count' is all entries's count of current sorted index file
 'crc' is used to verify the current index file

on disk db
==========
 It is the 'value' storage file.
 'db' structured:
 +--------+--------+--------+--------+
 | 	    magic number             |
 +--------+--------+--------+--------+
 |           value 1 len             |
 +--------+--------+--------+--------+
 |            value 1                |
 +--------+--------+--------+--------+
 |      ... all the others ...       |
 +--------+--------+--------+--------+
 |           value N len             |
 +--------+--------+--------+--------+
 |            value N                |
 +--------+--------+--------+--------+
 'magic number' is a int number for datas is not start from '0' offset
  



